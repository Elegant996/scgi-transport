name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build using caddy builder
    environment: production

    strategy:
      fail-fast: true
      matrix:
        arch: ["amd64"]
        os: 
          - ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        continue-on-error: true
        id: buildx1
        with:
          context: .
          file: ./dev.Dockerfile
          platforms: linux/${{ matrix.arch }}
          load: true
          tags: stable-test

      # Temp workaround for failed builds
      - name: Wait to retry
        if: steps.buildx1.outcome != 'success'
        run: |
          sleep 60

      # Temp workaround for failed builds
      - name: Build and export to Docker
        uses: docker/build-push-action@v6
        if: steps.buildx1.outcome != 'success'
        with:
          context: .
          file: ./dev.Dockerfile
          platforms: linux/${{ matrix.arch }}
          load: true
          tags: stable-test

      # - name: Test
      #   run: |
      #     docker run --rm stable-test caddy stop

  renovate:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'renovate[bot]'

    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Approve and merge PR
        run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ github.token }}

  semantic-release:
    needs: [renovate]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/git
          dry_run: true
          ci: ${{ github.event_name == 'pull_request' && false || '' }}
          unset_gha_env: ${{ github.event_name == 'pull_request' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Do something when a new release published
        if: fromJSON(steps.semantic.outputs.new_release_published)
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}